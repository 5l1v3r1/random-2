#!/bin/bash

if [ "$#" -eq 1 ]; then

if [[ "$1" =~ ^www.* ]]; then
	ADRES=$( echo $1 | cut -b5- )
else
	ADRES=$1
fi

	clear
	printf "\n%s %s" "[~]" $(date +"%T")
	printf "\n[~] Target - $1"
	printf "\n[~] IP - %s" $(dig +short $1)

#Info

	printf "\n\n\e[1m[+] Basic info\e[0m\n"
	printf "\n - Host\n\n"
	host -W 3 -a $1
	printf "\n - Whois\n"
	whois $ADRES

#80

	nc -z -w5 $1 80; STATUS=$?
	if [ $STATUS -eq 0 ]; then
		printf "\n\e[1m[+] HTTP (80)\e[0m\n\n - Headers\n\n"
		curl -s -L -X GET -I $1 -m 5 -A "Mozilla/5.0 (Windows NT 5.1; rv:15.0) Gecko/20100101 Firefox/15.0.1"
		printf " - Methods\n\n"

	for method in GET POST PUT TRACE HEAD DELETE OPTIONS;
	do
	printf "$method ";
	printf "$method / HTTP/1.1\nHost: $1\n\n" | nc -q 1 $1 80 | grep "HTTP/1.1"
	done
	else 
	printf "\n\e[1m[-] HTTP (80)\e[0m\n\n"
	fi

#443

	nc -z -w5 $1 443; STATUS=$?
	if [ $STATUS -eq 0 ]; then
		printf "\n\n\e[1m[+] HTTPS (443)\e[0m\n\n - Headers\n\n"
		curl -s -L -X GET -I $1 -m 5 -k -A "Mozilla/5.0 (Windows NT 5.1; rv:15.0) Gecko/20100101 Firefox/15.0.1"

		printf " - Methods\n\n"

	for method in GET POST PUT TRACE TRACK HEAD DELETE OPTIONS;
	do
	printf "$method ";
	printf "$method / HTTP/1.1\nHost: $1\n\n" | ncat --ssl -w 5 $1 443 | grep "HTTP/1.1"
	done

	printf "\n - SSL\n\n"; sslscan $1 | grep Accepted

	printf "\n - POODLE (SSLv3)"

	host=${1:-$1}
	port=${2:-443}
	timeout_bin=`which timeout 2>/dev/null`
	
	printf "\n\n$host:$port - "
	
	out="`echo 'Q' | ${timeout_bin:+$timeout_bin 5} openssl s_client -ssl3 -connect "${host}:${port}" 2>/dev/null`"
	
	if [ $? -eq 124 ]; then
		echo "Timeout connecting to host!"
	fi
	
	if ! echo "$out" | grep -q 'Cipher is' ; then
		echo 'Not vulnerable.  Failed to establish SSL connection.'
	fi
	
	proto=`echo "$out" | grep '^ *Protocol *:' | awk '{ print $3 }'`
	cipher=`echo "$out" | grep '^ *Cipher *:' | awk '{ print $3 }'`
	
	if [ "$cipher" = '0000'  -o  "$cipher" = '(NONE)' ]; then
		echo 'Not vulnerable.  Failed to establish SSLv3 connection.'
	else
		echo "Vulnerable!  SSLv3 connection established using $proto/$cipher"
	fi

	else 
	printf "\n\e[1m[-] HTTPS (443)\e[0m\n\n"
	fi

#Scans

	printf "\n\e[1m[+] Nmap\e[0m\n\n"
	sudo nmap -n -O -sS -T4 -sV -f --script "(default or auth or vuln or intrusive) and not http-csrf and not http-dombased-xss and not http-stored-xss" $1 

	printf "\n\e[1m[+] DNS\e[0m\n\n"
	printf " - fierce\n\n"
	fierce -threads 5 -dns $ADRES
	printf "\n - dnsdict6\n\n"
	dnsdict6 -4 -t 15 $ADRES

	printf "\n\e[1m[+] Bruteforce\e[0m\n\n"
	nmap --script brute,auth $1 | grep '^|'

#End

else
	printf "\nYou need to specify target...\n"
	printf "Usage - ./scan <url>\n\n"
fi

